[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "auroraftp"
description = "Modern, clean FTP/SFTP client with feature parity to major FTP clients"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Robert Clouthier", email = "clouthierrobert@gmail.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: X11 Applications :: Qt",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Communications :: File Sharing",
    "Topic :: Internet :: File Transfer Protocol (FTP)",
]
requires-python = ">=3.11"
dependencies = [
    "PyQt6>=6.5.0",
    "aioftp>=0.21.0",
    "asyncssh>=2.14.0",
    "keyring>=24.0.0",
    "cryptography>=41.0.0",
    "pydantic>=2.0.0",
    "watchfiles>=0.20.0",
    "rich>=13.0.0",
    "platformdirs>=3.0.0",
    "click>=8.0.0",
]
dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "black>=23.0.0",
    "mypy>=1.5.0",
    "pytest>=7.0.0",
    "pytest-qt>=4.2.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pre-commit>=3.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-qt>=4.2.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "docker>=6.0.0",
]
theme = [
    "qt-material>=2.14",
    "qdarkstyle>=3.2.0",
]

[project.scripts]
auroraftp = "auroraftp.app:main"

[project.urls]
Homepage = "https://github.com/rmc0315/auroraftp"
Repository = "https://github.com/rmc0315/auroraftp"
Issues = "https://github.com/rmc0315/auroraftp/issues"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.wheel]
packages = ["auroraftp"]

[tool.ruff]
line-length = 88
target-version = "py311"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
line-length = 88
target-version = ['py311']

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=auroraftp",
    "--cov-report=term-missing",
    "--cov-report=html",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["auroraftp"]
omit = [
    "tests/*",
    "auroraftp/__main__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]